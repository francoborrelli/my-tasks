{"version":3,"sources":["store/actions.js","store/mutations.js","utils/validator.js","components/card/card.js","components/input/input.js","components/new/new.js","components/toDo/displayCard/displayCard.js","components/toDo/editCard/editCard.js","components/toDo/toDo.js","components/list/sortableList/sortableList.js","components/list/noResult.js","components/list/list.js","App.js","store/reducer.js","store/utils/reducer.js","store/store.js","serviceWorker.js","index.js"],"names":["addToDo","createAction","editToDo","removeToDo","reorder","validateText","text","replace","length","components_card_card","props","react_default","a","createElement","card","components_input_input","input","Object","assign","className","placeholder","connect","dispatch","bindActionCreators","_ref","_useState","useState","_useState2","slicedToArray","setText","title","value","onPressEnter","onChange","e","target","todo","toddleEdit","actions","icon","onClick","type","bodyStyle","textAlign","Item","es_form","editActions","style","marginBottom","validateStatus","defaultValue","new","old","toDo_toDo","edit","setEdit","Component","EditCard","DisplayCard","todos","react_beautiful_dnd_esm","onDragEnd","result","destination","source","index","droppableId","isDropDisabled","provided","snapshot","ref","innerRef","map","i","key","draggableId","date","isDragDisabled","draggableProps","dragHandleProps","noResult","state","sortableList","App","new_new","list_list","setStorage","localStorage","setItem","JSON","stringify","handlers","_handlers","defineProperty","concat","toConsumableArray","Date","element","findIndex","t","slice","objectSpread","removed","filter","movement","Array","from","_todos$splice","splice","toDo","getItem","reducer","defaultState","arguments","undefined","payload","f","parse","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","Boolean","location","hostname","match","ReactDOM","render","es","store","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fddde0e1.chunk.js","sourcesContent":["import { createAction } from \"redux-actions\";\nimport * as mutations from \"./mutations\";\n\nexport const addToDo = createAction(mutations.ADD_TODO);\nexport const editToDo = createAction(mutations.EDIT_TODO);\nexport const removeToDo = createAction(mutations.REMOVE_TODO);\nexport const reorder = createAction(mutations.REORDER_TODOS);\n","export const ADD_TODO = \"ADD_TODO\";\nexport const EDIT_TODO = \"EDIT_TODO\";\nexport const REMOVE_TODO = \"REMOVE_TODO\";\nexport const REORDER_TODOS = \"REORDER_TODOS\";\n","const notEmpty = str => str.replace(/\\s+/, \"\").length;\n\nexport const validateText = text => notEmpty(text) && text !== null;\n","import React from \"react\";\n\nimport { Card } from \"antd\";\n\nimport \"./card.css\";\n\nexport default props => <Card {...props} />;\n","import React from \"react\";\n\nimport { Input } from \"antd\";\n\nimport \"../input/input.css\";\n\nexport default props => (\n  <Input\n    className=\"input-text\"\n    placeholder=\"Ingrese una breve descripciÃ³n\"\n    {...props}\n  />\n);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { addToDo } from \"../../store/actions\";\nimport { validateText } from \"../../utils/validator\";\n\nimport Card from \"../card/card\";\nimport Input from \"../input/input\";\n\nconst New = ({ addToDo }) => {\n  const [text, setText] = useState(\"\");\n\n  const onPress = () => {\n    if (validateText(text)) {\n      addToDo(text);\n      setText(\"\");\n    }\n  };\n\n  return (\n    <Card title=\"To Do List\">\n      <Input\n        value={text}\n        onPressEnter={onPress}\n        onChange={e => setText(e.target.value)}\n      />\n    </Card>\n  );\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({ addToDo }, dispatch);\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(New);\n","import React from \"react\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\n\nimport { removeToDo } from \"../../../store/actions\";\n\nimport { Icon } from \"antd\";\nimport Card from \"../../card/card\";\n\nimport \"./displayCard.css\";\n\nconst DisplayCard = ({ removeToDo, todo, toddleEdit }) => {\n  const remove = () => removeToDo(todo);\n  const actions = [\n    <Icon onClick={toddleEdit} type=\"edit\" className=\"edit-icon\" />,\n    <Icon onClick={remove} type=\"delete\" className=\"delete-icon\" />\n  ];\n\n  return (\n    <Card actions={actions} bodyStyle={{ textAlign: \"left\" }}>\n      <span className=\"text-section\">{todo.text}</span>\n    </Card>\n  );\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({ removeToDo }, dispatch);\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(DisplayCard);\n","import React, { useState } from \"react\";\nimport { bindActionCreators } from \"redux\";\nimport { editToDo } from \"../../../store/actions\";\nimport { connect } from \"react-redux\";\n\nimport { Icon, Form } from \"antd\";\nimport { validateText } from \"../../../utils/validator\";\nimport Card from \"../../card/card\";\nimport Input from \"../../input/input\";\n\nimport \"./editCard.css\";\n\nconst Item = Form.Item;\n\nconst EditCard = ({ toddleEdit, editToDo, todo }) => {\n  const [text, setText] = useState(todo.text);\n\n  const edit = () => {\n    if (validateText(text)) {\n      toddleEdit();\n      editToDo({\n        new: text,\n        old: todo\n      });\n    }\n  };\n\n  const editActions = [\n    <Icon onClick={toddleEdit} type=\"close\" className=\"close-icon\" />\n  ];\n\n  return (\n    <Card actions={editActions}>\n      <Item\n        style={{ marginBottom: 0 }}\n        validateStatus={e => (validateText(text) ? \"\" : \"error\")}\n      >\n        <Input\n          defaultValue={text}\n          onPressEnter={edit}\n          onChange={e => setText(e.target.value)}\n        />\n      </Item>\n    </Card>\n  );\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({ editToDo }, dispatch);\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(EditCard);\n","import React, { useState } from \"react\";\n\nimport DisplayCard from \"./displayCard/displayCard\";\nimport EditCard from \"./editCard/editCard\";\n\nimport \"./toDo.css\";\n\nexport default ({ todo }) => {\n  const [edit, setEdit] = useState(false);\n\n  const toddle = () => {\n    setEdit(!edit);\n  };\n\n  const Component = edit ? EditCard : DisplayCard;\n\n  return <Component toddleEdit={toddle} todo={todo} />;\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\n\nimport { reorder } from \"../../../store/actions\";\n\nimport ToDo from \"../../toDo/toDo\";\n\nconst List = ({ todos, reorder }) => {\n  const onDragEnd = result => {\n    if (!result.destination) {\n      return;\n    }\n    reorder({\n      source: result.source.index,\n      destination: result.destination.index\n    });\n  };\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <Droppable droppableId=\"droppable\" isDropDisabled={todos.length === 1}>\n        {(provided, snapshot) => (\n          <div ref={provided.innerRef}>\n            {todos.map((todo, i) => (\n              <Draggable\n                key={i}\n                draggableId={todo.date}\n                index={i}\n                isDragDisabled={todos.length === 1}\n              >\n                {(provided, snapshot) => (\n                  <div\n                    ref={provided.innerRef}\n                    {...provided.draggableProps}\n                    {...provided.dragHandleProps}\n                  >\n                    <ToDo todo={todo} />\n                  </div>\n                )}\n              </Draggable>\n            ))}\n            {provided.placeholder}\n          </div>\n        )}\n      </Droppable>\n    </DragDropContext>\n  );\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({ reorder }, dispatch);\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(List);\n","import React from \"react\";\n\nimport Card from \"../card/card\";\n\nexport default () => <Card>Todavia no tienes tareas en tu lista</Card>;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport SortableList from \"./sortableList/sortableList\";\nimport NoResult from \"./noResult\";\n\nimport \"./list.css\";\n\nconst List = ({ todos }) => (\n  <div className=\"todo-container\">\n    {todos.length ? <SortableList todos={todos} /> : <NoResult />}\n  </div>\n);\n\nconst mapStateToProps = state => {\n  return {\n    todos: state.todos\n  };\n};\n\nexport default connect(mapStateToProps)(List);\n","import React, { Component } from \"react\";\nimport \"./App.css\";\n\nimport New from \"./components/new/new\";\nimport List from \"./components/list/list\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <New />\n        <List />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import reducer from \"./utils/reducer\";\nimport * as mutations from \"./mutations\";\n\nconst setStorage = e => {\n  localStorage.setItem(\"todos\", JSON.stringify(e));\n};\n\nconst handlers = {\n  [mutations.ADD_TODO]: (state, text) => {\n    const todos = [...state.todos, { date: new Date(), text: text }];\n    setStorage(todos);\n    return { todos };\n  },\n\n  [mutations.EDIT_TODO]: (state, element) => {\n    const index = state.todos.findIndex(t => element.old === t);\n    const todos = [\n      ...state.todos.slice(0, index),\n      { ...element.old, text: element.new },\n      ...state.todos.slice(index + 1)\n    ];\n    setStorage(todos);\n    return { todos };\n  },\n\n  [mutations.REMOVE_TODO]: (state, removed) => {\n    const todos = state.todos.filter(todo => todo !== removed);\n    setStorage(todos);\n    return { todos };\n  },\n\n  [mutations.REORDER_TODOS]: (state, movement) => {\n    const todos = Array.from(state.todos);\n    const [removed] = todos.splice(movement.source, 1);\n    todos.splice(movement.destination, 0, removed);\n    setStorage(todos);\n    return { todos };\n  }\n};\n\nconst toDo = localStorage.getItem(\"todos\");\n\nconst defaultState = {\n  todos: toDo !== null ? JSON.parse(toDo) : []\n};\n\nexport default reducer(handlers, defaultState);\n","export default (handlers, defaultState) => (\n  state = defaultState,\n  { type, payload }\n) => (handlers[type] || (f => f))(state, payload);\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport reducer from \"./reducer\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport default createStore(reducer, composeEnhancers(applyMiddleware(thunk)));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./store/store\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}